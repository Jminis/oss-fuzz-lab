/out/clang-fuzzer -rss_limit_mb=2560 -timeout=25 clang-fuzzer_poc/llvm--clang-fuzzer--crash-961a3c8c1c0b62745a3d227d631e52c2-2023-11-11-20:05:31 # /tmp/clang-fuzzer_corpus < /dev/null
INFO: Running with entropic power schedule (0xFF, 100).
INFO: Seed: 285880373
INFO: Loaded 1 modules   (2512892 inline 8-bit counters): 2512892 [0x13f9d890, 0x1420308c), 
INFO: Loaded 1 PC tables (2512892 PCs): 2512892 [0x14203090,0x1685b050), 
/out/clang-fuzzer: Running 1 inputs 1 time(s) each.
Running: clang-fuzzer_poc/llvm--clang-fuzzer--crash-961a3c8c1c0b62745a3d227d631e52c2-2023-11-11-20:05:31
AddressSanitizer:DEADLYSIGNAL
=================================================================
[1m[31m==11==ERROR: AddressSanitizer: SEGV on unknown address 0x000000000008 (pc 0x0000080cf5eb bp 0x7ffea72258f0 sp 0x7ffea7224e00 T0)
[1m[0m==11==The signal is caused by a READ memory access.
==11==Hint: address points to the zero page.
SCARINESS: 10 (null-deref)
    #0 0x80cf5eb in getKind /src/llvm-project/clang/include/clang/Sema/ParsedAttr.h:608:43
    #1 0x80cf5eb in hasNullabilityAttr /src/llvm-project/clang/lib/Sema/SemaType.cpp:4243:12
    #2 0x80cf5eb in GetFullTypeForDeclarator((anonymous namespace)::TypeProcessingState&, clang::QualType, clang::TypeSourceInfo*) /src/llvm-project/clang/lib/Sema/SemaType.cpp:5229:12
    #3 0x80bf5ee in clang::Sema::GetTypeForDeclarator(clang::Declarator&, clang::Scope*) /src/llvm-project/clang/lib/Sema/SemaType.cpp:6082:10
    #4 0x626f6ee in clang::Sema::HandleDeclarator(clang::Scope*, clang::Declarator&, llvm::MutableArrayRef<clang::TemplateParameterList*>) /src/llvm-project/clang/lib/Sema/SemaDecl.cpp:6403:27
    #5 0x626eb16 in clang::Sema::ActOnDeclarator(clang::Scope*, clang::Declarator&) /src/llvm-project/clang/lib/Sema/SemaDecl.cpp:6183:15
    #6 0x513d0c0 in clang::Parser::ParseDeclarationAfterDeclaratorAndAttributes(clang::Declarator&, clang::Parser::ParsedTemplateInfo const&, clang::Parser::ForRangeInit*) /src/llvm-project/clang/lib/Parse/ParseDecl.cpp:2517:24
    #7 0x5135eec in clang::Parser::ParseDeclGroup(clang::ParsingDeclSpec&, clang::DeclaratorContext, clang::ParsedAttributes&, clang::SourceLocation*, clang::Parser::ForRangeInit*) /src/llvm-project/clang/lib/Parse/ParseDecl.cpp:2337:21
    #8 0x50abb0e in clang::Parser::ParseDeclOrFunctionDefInternal(clang::ParsedAttributes&, clang::ParsedAttributes&, clang::ParsingDeclSpec&, clang::AccessSpecifier) /src/llvm-project/clang/lib/Parse/Parser.cpp:1227:10
    #9 0x50a961b in clang::Parser::ParseDeclarationOrFunctionDefinition(clang::ParsedAttributes&, clang::ParsedAttributes&, clang::ParsingDeclSpec*, clang::AccessSpecifier) /src/llvm-project/clang/lib/Parse/Parser.cpp:1249:12
    #10 0x50a4342 in clang::Parser::ParseExternalDeclaration(clang::ParsedAttributes&, clang::ParsedAttributes&, clang::ParsingDeclSpec*) /src/llvm-project/clang/lib/Parse/Parser.cpp:1053:14
    #11 0x5098528 in clang::Parser::ParseTopLevelDecl(clang::OpaquePtr<clang::DeclGroupRef>&, clang::Sema::ModuleImportState&) /src/llvm-project/clang/lib/Parse/Parser.cpp:748:12
    #12 0x509630b in clang::Parser::ParseFirstTopLevelDecl(clang::OpaquePtr<clang::DeclGroupRef>&, clang::Sema::ModuleImportState&) /src/llvm-project/clang/lib/Parse/Parser.cpp:595:26
    #13 0x507b486 in clang::ParseAST(clang::Sema&, bool, bool) /src/llvm-project/clang/lib/Parse/ParseAST.cpp:162:25
    #14 0x63ce24 in clang::CodeGenAction::ExecuteAction() /src/llvm-project/clang/lib/CodeGen/CodeGenAction.cpp:1145:30
    #15 0x4d8ee30 in clang::FrontendAction::Execute() /src/llvm-project/clang/lib/Frontend/FrontendAction.cpp:1070:8
    #16 0x4b330e3 in clang::CompilerInstance::ExecuteAction(clang::FrontendAction&) /src/llvm-project/clang/lib/Frontend/CompilerInstance.cpp:1045:33
    #17 0x4aa46c5 in clang::tooling::FrontendActionFactory::runInvocation(std::__1::shared_ptr<clang::CompilerInvocation>, clang::FileManager*, std::__1::shared_ptr<clang::PCHContainerOperations>, clang::DiagnosticConsumer*) /src/llvm-project/clang/lib/Tooling/Tooling.cpp:467:33
    #18 0x6178d7 in clang_fuzzer::HandleCXX(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, char const*, std::__1::vector<char const*, std::__1::allocator<char const*> > const&) /src/llvm-project/clang/tools/clang-fuzzer/handle-cxx/handle_cxx.cpp:49:11
    #19 0x616650 in LLVMFuzzerTestOneInput /src/llvm-project/clang/tools/clang-fuzzer/ClangFuzzer.cpp:23:3
    #20 0x4e7db3 in fuzzer::Fuzzer::ExecuteCallback(unsigned char const*, unsigned long) /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerLoop.cpp:611:15
    #21 0x4d3512 in fuzzer::RunOneTest(fuzzer::Fuzzer*, char const*, unsigned long) /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerDriver.cpp:324:6
    #22 0x4d8dbc in fuzzer::FuzzerDriver(int*, char***, int (*)(unsigned char const*, unsigned long)) /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerDriver.cpp:860:9
    #23 0x5022f2 in main /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerMain.cpp:20:10
    #24 0x7ff3268cb082 in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x24082) (BuildId: e678fe54a5d2c2092f8e47eb0b33105e380f7340)
    #25 0x4c96dd in _start (/out/clang-fuzzer+0x4c96dd)

DEDUP_TOKEN: getKind--hasNullabilityAttr--GetFullTypeForDeclarator((anonymous namespace)::TypeProcessingState&, clang::QualType, clang::TypeSourceInfo*)
AddressSanitizer can not provide additional info.
SUMMARY: AddressSanitizer: SEGV /src/llvm-project/clang/include/clang/Sema/ParsedAttr.h:608:43 in getKind
==11==ABORTING
