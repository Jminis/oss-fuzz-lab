INFO: Running with entropic power schedule (0xFF, 100).
INFO: Seed: 2216227562
INFO: Loaded 1 modules   (1608 inline 8-bit counters): 1608 [0x618440, 0x618a88),
INFO: Loaded 1 PC tables (1608 PCs): 1608 [0x5ca498,0x5d0918),
./fuzz_format_sav: Running 1 inputs 1 time(s) each.
Running: /mnt/c/Users/Jmini/Downloads/readstat--fuzz_format_sav--crash-fc10173331f1983e43699c8635ca17de-2023-05-11-14:42:06
=================================================================
==1299347==ERROR: AddressSanitizer: heap-buffer-overflow on address 0x6250000000ff at pc 0x000000579f9c bp 0x7ffecdd7ce50 sp 0x7ffecdd7ce48
WRITE of size 1 at 0x6250000000ff thread T0
    #0 0x579f9b in sav_process_row /src/readstat/src/spss/readstat_sav_read.c:712:61
    #1 0x575d73 in sav_read_uncompressed_data /src/readstat/src/spss/readstat_sav_read.c:838:18
    #2 0x575d73 in sav_read_data /src/readstat/src/spss/readstat_sav_read.c:799:18
    #3 0x570002 in readstat_parse_sav /src/readstat/src/spss/readstat_sav_read.c:1681:18
    #4 0x56c6b9 in LLVMFuzzerTestOneInput /src/readstat/src/fuzz/fuzz_format_sav.c:17:5
    #5 0x43de03 in fuzzer::Fuzzer::ExecuteCallback(unsigned char const*, unsigned long) /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerLoop.cpp:611:15
    #6 0x429562 in fuzzer::RunOneTest(fuzzer::Fuzzer*, char const*, unsigned long) /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerDriver.cpp:324:6
    #7 0x42ee0c in fuzzer::FuzzerDriver(int*, char***, int (*)(unsigned char const*, unsigned long)) /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerDriver.cpp:860:9
    #8 0x458342 in main /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerMain.cpp:20:10
    #9 0x7fa794107d8f in __libc_start_call_main csu/../sysdeps/nptl/libc_start_call_main.h:58:16
    #10 0x7fa794107e3f in __libc_start_main csu/../csu/libc-start.c:392:3
    #11 0x41f72d in _start (/home/qwer/mylab/oss-fuzz/build/out/readstat/fuzz_format_sav+0x41f72d)

0x6250000000ff is located 1 bytes to the left of 9007-byte region [0x625000000100,0x62500000242f)
allocated by thread T0 here:
    #0 0x52ef96 in __interceptor_malloc /src/llvm-project/compiler-rt/lib/asan/asan_malloc_linux.cpp:69:3
    #1 0x57f33a in readstat_malloc /src/readstat/src/readstat_malloc.c:14:12
    #2 0x5750be in sav_read_data /src/readstat/src/spss/readstat_sav_read.c:780:23
    #3 0x570002 in readstat_parse_sav /src/readstat/src/spss/readstat_sav_read.c:1681:18
    #4 0x56c6b9 in LLVMFuzzerTestOneInput /src/readstat/src/fuzz/fuzz_format_sav.c:17:5
    #5 0x43de03 in fuzzer::Fuzzer::ExecuteCallback(unsigned char const*, unsigned long) /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerLoop.cpp:611:15
    #6 0x429562 in fuzzer::RunOneTest(fuzzer::Fuzzer*, char const*, unsigned long) /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerDriver.cpp:324:6
    #7 0x42ee0c in fuzzer::FuzzerDriver(int*, char***, int (*)(unsigned char const*, unsigned long)) /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerDriver.cpp:860:9
    #8 0x458342 in main /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerMain.cpp:20:10
    #9 0x7fa794107d8f in __libc_start_call_main csu/../sysdeps/nptl/libc_start_call_main.h:58:16

SUMMARY: AddressSanitizer: heap-buffer-overflow /src/readstat/src/spss/readstat_sav_read.c:712:61 in sav_process_row
Shadow bytes around the buggy address:
  0x0c4a7fff7fc0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x0c4a7fff7fd0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x0c4a7fff7fe0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x0c4a7fff7ff0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x0c4a7fff8000: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
=>0x0c4a7fff8010: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa[fa]
  0x0c4a7fff8020: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x0c4a7fff8030: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x0c4a7fff8040: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x0c4a7fff8050: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x0c4a7fff8060: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
Shadow byte legend (one shadow byte represents 8 application bytes):
  Addressable:           00
  Partially addressable: 01 02 03 04 05 06 07
  Heap left redzone:       fa
  Freed heap region:       fd
  Stack left redzone:      f1
  Stack mid redzone:       f2
  Stack right redzone:     f3
  Stack after return:      f5
  Stack use after scope:   f8
  Global redzone:          f9
  Global init order:       f6
  Poisoned by user:        f7
  Container overflow:      fc
  Array cookie:            ac
  Intra object redzone:    bb
  ASan internal:           fe
  Left alloca redzone:     ca
  Right alloca redzone:    cb
==1299347==ABORTING