{
    "file_format_version": "1.2.0",
    "settings_array": [
        {
            "app_keys": [
                "/out/settings_fuzzer",
                "/work/settings_fuzzer"
            ],
            "stderr_log": "/tmp/stderr.log",
            "log_locations": [
                {
                    "destinations":["/tmp"],
                    "filters":                         "key": "debug_action",
                                                "value": [
                                                    "VK_DBG_LAYER_ACTION_LOG_MSG"
                                                ]
                                            }
                                        ]
                                    }
                                }
                            ]
                        },
                        {
                            "key": "VK_DBG_LAYER_ACTION_CALLBACK",
                            "label": "Callback",
                            "description": "Call user defined callback function(s) that have been registered via the VK_EXT_debug_report extension. Since application must register callback, this is a NOOP for the settings file.",
                            "view": "HIDDEN"
                        },
                        {
                            "key": "VK_DBG_LAYER_ACTION_DEBUG_OUTPUT",
                            "label": "Debug Output",
                            "description": "Log a txt message using the Windows OutputDebugString function.",
                            "platforms": [
                                "WINDOWS"
                            ]
                        },
                        {
                            "key": "VK_DBG_LAYER_ACTION_BREAK",
                            "label": "Break",
                            "description": "Trigger a breakpoint if a debugger is in use."
                        }
                    ],
                    "default": [
                        "VK_DBG_LAYER_ACTION_LOG_MSG"
                    ]
                },
                {
                    "key": "report_flags",
                    "label": "Message Severity",
                    "description": "Comma-delineated list of options specifying the types of messages to be reported",
                    "type": "FLAGS",
                    "flags": [
                        {
                            "key": "info",
                            "label": "Info",
                            "description": "Report informational messages."
                        },
                        {
                            "key": "warn",
                            "label": "Warning",
                            "description": "Report warnings from using the API in a manner which may lead to undefined behavior or to warn the user of common trouble spots. A warning does NOT necessarily signify illegal application behavior."
                        },
                        {
                            "key": "perf",
                            "label": "Performance",
                            "description": "Report usage of the API that may cause suboptimal performance."
                        },
                        {
                            "key": "error",
                            "label": "Error",
                            "description": "Report errors in API usage."
                        },
                        {
                            "key": "debug",
                            "label": "Debug",
                            "description": "For layer development. Report messages for debugging layer behavior.",
                            "view": "HIDDEN"
                        }
                    ],
                    "default": [
                        "error"
                    ]
                },
                {
                    "key": "enable_message_limit",
       {
    "file_format_version":             "label": "Limit Duplicated Messages",
                    "description": "Enable limiting of duplicate messages.",
                    "type": "BOOL",
                    "default": true,
                    "settings": [
                        {
                            "key": "duplicate_message_limit",
                            "env": "VK_LAYER_DUPLICATE_MESSAGE_LIMIT",
                            "label": "Max Duplicated Messages",
                            "description": "Maximum number of times any single validation message should be reported.",
                            "type": "INT",
                            "default": 10,
                            "range": {
                                "min": 1
                            },
                            "dependence": {
                                "mode": "ALL",
                                "settings": [
                                    {
                                        "key": "enable_message_limit",
                                        "value": true
                                    }
                                ]
                            }
                        }
                    ]
                },
                {
                    "key": "message_id_filter",
                    "label": "Mute Message VUIDs",
                    "description": "List of VUIDs and VUID identifers which are to be IGNORED by the validation layer",
                    "t "1.2.0",
    "layer": {
        "test_code_description": "This file is literally a copy of an installed Validation layer manifest file for linux. It was chosen because it contains a lot of complex json structures that aren't present in the test framework's generated json, so exercises cJSON better",
        "name": "VK_LAYER_KHRONOS_validation",
        "type": "GLOBAL",
        "library_path": "libVkLayer_khronos_validation.so",
        "api_version": "1.3.231",
        "implementation_version": "1",
        "description": "Khronos Validation Layer",
        "introduction": "The main, comprehensive Khronos validation layer.\n\nVulkan is an Explicit API, enabling direct control over how GPUs actually work. By design, minimal error checking is done inside a Vulkan driver. Applications have full control and responsibility for correct operation. Any errors in how Vulkan is used can result in a crash. \n\nThe Khronos Valiation Layer can be enabled to assist development by enabling developers to verify their applicat["all"]
                }
            ],
            "layers": [
                {
                    "control": "auto",
                    "name": "test",
                    "path": "test",
                    "treat_as_implicit_manifest": true
                },
                {
                    "control": "unordered_layer_location",
                    "name": "test2",
                    "path": "test2",
                    "treat_as_implicit_manifest": true
                }
            ]
        },
        {
            "app_keys": [
                "val1",
                "val2",
                "val3",
       2222222222222222222222222222222222222222222222222         "val4"
            ]
        }
    ]
}
