/out/compress_chunk_fuzzer -rss_limit_mb=2560 -timeout=25 -print_final_stats=1 -detect_leaks=0 -max_total_time=10 compress_chunk_fuzzer_corpus_002/ /tmp/compress_chunk_fuzzer_corpus < /dev/null
INFO: Running with entropic power schedule (0xFF, 100).
INFO: Seed: 2600104844
INFO: Loaded 1 modules   (44626 inline 8-bit counters): 44626 [0xc00be0, 0xc0ba32), 
INFO: Loaded 1 PC tables (44626 PCs): 44626 [0xc0ba38,0xcb9f58), 
INFO:        0 files found in compress_chunk_fuzzer_corpus_002/
INFO:        0 files found in /tmp/compress_chunk_fuzzer_corpus
INFO: -max_len is not provided; libFuzzer will not generate inputs larger than 4096 bytes
INFO: A corpus is not provided, starting from an empty corpus
#2	INITED cov: 40 ft: 41 corp: 1/1b exec/s: 0 rss: 35Mb
#3	NEW    cov: 44 ft: 45 corp: 2/3b lim: 4 exec/s: 0 rss: 35Mb L: 2/2 MS: 1 CrossOver-
#4	NEW    cov: 46 ft: 47 corp: 3/6b lim: 4 exec/s: 0 rss: 35Mb L: 3/3 MS: 1 InsertByte-
#5	NEW    cov: 50 ft: 51 corp: 4/9b lim: 4 exec/s: 0 rss: 35Mb L: 3/3 MS: 1 ShuffleBytes-
#10	NEW    cov: 53 ft: 54 corp: 5/13b lim: 4 exec/s: 0 rss: 35Mb L: 4/4 MS: 5 EraseBytes-CopyPart-ChangeBit-InsertByte-InsertByte-
#22	NEW    cov: 54 ft: 55 corp: 6/16b lim: 4 exec/s: 0 rss: 35Mb L: 3/4 MS: 2 InsertByte-ChangeBit-
#32	NEW    cov: 56 ft: 57 corp: 7/19b lim: 4 exec/s: 0 rss: 35Mb L: 3/4 MS: 5 ChangeByte-ShuffleBytes-InsertByte-ChangeByte-ChangeBinInt-
#104	NEW    cov: 57 ft: 58 corp: 8/23b lim: 4 exec/s: 0 rss: 35Mb L: 4/4 MS: 2 CopyPart-ChangeBinInt-
#126	REDUCE cov: 57 ft: 58 corp: 8/22b lim: 4 exec/s: 0 rss: 35Mb L: 2/4 MS: 2 CopyPart-EraseBytes-
	NEW_FUNC[1/1]: 0x57a200 in blosc1_set_blocksize /src/c-blosc2/blosc/blosc2.c:3718
#143	NEW    cov: 61 ft: 62 corp: 9/26b lim: 4 exec/s: 0 rss: 36Mb L: 4/4 MS: 2 ChangeBit-CopyPart-
#197	REDUCE cov: 61 ft: 62 corp: 9/25b lim: 4 exec/s: 0 rss: 36Mb L: 3/4 MS: 4 ChangeByte-CopyPart-EraseBytes-ShuffleBytes-
=================================================================
[1m[31m==12==ERROR: AddressSanitizer: heap-buffer-overflow on address 0x6040000032b0 at pc 0x00000058f3f0 bp 0x7ffd35b9e850 sp 0x7ffd35b9e848
[1m[0m[1m[34mWRITE of size 4 at 0x6040000032b0 thread T0[1m[0m
SCARINESS: 36 (4-byte-write-heap-buffer-overflow)
    #0 0x58f3ef in _sw32 /src/c-blosc2/blosc/blosc-private.h:119:23
    #1 0x58f3ef in serial_blosc /src/c-blosc2/blosc/blosc2.c:1935:7
    #2 0x58f3ef in do_job /src/c-blosc2/blosc/blosc2.c:2133:15
    #3 0x577be7 in blosc_compress_context /src/c-blosc2/blosc/blosc2.c:2436:15
    #4 0x579a6e in blosc2_compress /src/c-blosc2/blosc/blosc2.c:2837:12
    #5 0x56c923 in LLVMFuzzerTestOneInput /src/c-blosc2/tests/fuzz/fuzz_compress_chunk.c:44:15
    #6 0x43dec3 in fuzzer::Fuzzer::ExecuteCallback(unsigned char const*, unsigned long) /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerLoop.cpp:611:15
    #7 0x43d6aa in fuzzer::Fuzzer::RunOne(unsigned char const*, unsigned long, bool, fuzzer::InputInfo*, bool, bool*) /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerLoop.cpp:514:3
    #8 0x43ed79 in fuzzer::Fuzzer::MutateAndTestOne() /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerLoop.cpp:757:19
    #9 0x43fa45 in fuzzer::Fuzzer::Loop(std::__Fuzzer::vector<fuzzer::SizedFile, std::__Fuzzer::allocator<fuzzer::SizedFile> >&) /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerLoop.cpp:895:5
    #10 0x42edaf in fuzzer::FuzzerDriver(int*, char***, int (*)(unsigned char const*, unsigned long)) /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerDriver.cpp:912:6
    #11 0x458402 in main /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerMain.cpp:20:10
    #12 0x7fa781a55082 in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x24082) (BuildId: eebe5d5f4b608b8a53ec446b63981bba373ca0ca)
    #13 0x41f7ed in _start (/out/compress_chunk_fuzzer+0x41f7ed)

DEDUP_TOKEN: _sw32--serial_blosc--do_job
[1m[32m0x6040000032b1 is located 0 bytes to the right of 33-byte region [0x604000003290,0x6040000032b1)
[1m[0m[1m[35mallocated by thread T0 here:[1m[0m
    #0 0x52f056 in __interceptor_malloc /src/llvm-project/compiler-rt/lib/asan/asan_malloc_linux.cpp:69:3
    #1 0x56c9ee in LLVMFuzzerTestOneInput /src/c-blosc2/tests/fuzz/fuzz_compress_chunk.c:40:12
    #2 0x43dec3 in fuzzer::Fuzzer::ExecuteCallback(unsigned char const*, unsigned long) /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerLoop.cpp:611:15
    #3 0x43d6aa in fuzzer::Fuzzer::RunOne(unsigned char const*, unsigned long, bool, fuzzer::InputInfo*, bool, bool*) /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerLoop.cpp:514:3
    #4 0x43ed79 in fuzzer::Fuzzer::MutateAndTestOne() /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerLoop.cpp:757:19
    #5 0x43fa45 in fuzzer::Fuzzer::Loop(std::__Fuzzer::vector<fuzzer::SizedFile, std::__Fuzzer::allocator<fuzzer::SizedFile> >&) /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerLoop.cpp:895:5
    #6 0x42edaf in fuzzer::FuzzerDriver(int*, char***, int (*)(unsigned char const*, unsigned long)) /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerDriver.cpp:912:6
    #7 0x458402 in main /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerMain.cpp:20:10
    #8 0x7fa781a55082 in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x24082) (BuildId: eebe5d5f4b608b8a53ec446b63981bba373ca0ca)

DEDUP_TOKEN: __interceptor_malloc--LLVMFuzzerTestOneInput--fuzzer::Fuzzer::ExecuteCallback(unsigned char const*, unsigned long)
SUMMARY: AddressSanitizer: heap-buffer-overflow /src/c-blosc2/blosc/blosc-private.h:119:23 in _sw32
Shadow bytes around the buggy address:
  0x0c087fff8600: [1m[31mfa[1m[0m [1m[31mfa[1m[0m [1m[35mfd[1m[0m [1m[35mfd[1m[0m [1m[35mfd[1m[0m [1m[35mfd[1m[0m [1m[35mfd[1m[0m [1m[35mfd[1m[0m [1m[31mfa[1m[0m [1m[31mfa[1m[0m [1m[35mfd[1m[0m [1m[35mfd[1m[0m [1m[35mfd[1m[0m [1m[35mfd[1m[0m [1m[35mfd[1m[0m [1m[35mfd[1m[0m
  0x0c087fff8610: [1m[31mfa[1m[0m [1m[31mfa[1m[0m [1m[35mfd[1m[0m [1m[35mfd[1m[0m [1m[35mfd[1m[0m [1m[35mfd[1m[0m [1m[35mfd[1m[0m [1m[35mfd[1m[0m [1m[31mfa[1m[0m [1m[31mfa[1m[0m [1m[0m00[1m[0m [1m[0m00[1m[0m [1m[0m00[1m[0m [1m[0m00[1m[0m [1m[0m00[1m[0m [1m[0m00[1m[0m
  0x0c087fff8620: [1m[31mfa[1m[0m [1m[31mfa[1m[0m [1m[0m00[1m[0m [1m[0m00[1m[0m [1m[0m00[1m[0m [1m[0m00[1m[0m [1m[0m00[1m[0m [1m[31mfa[1m[0m [1m[31mfa[1m[0m [1m[31mfa[1m[0m [1m[35mfd[1m[0m [1m[35mfd[1m[0m [1m[35mfd[1m[0m [1m[35mfd[1m[0m [1m[35mfd[1m[0m [1m[35mfd[1m[0m
  0x0c087fff8630: [1m[31mfa[1m[0m [1m[31mfa[1m[0m [1m[35mfd[1m[0m [1m[35mfd[1m[0m [1m[35mfd[1m[0m [1m[35mfd[1m[0m [1m[35mfd[1m[0m [1m[35mfd[1m[0m [1m[31mfa[1m[0m [1m[31mfa[1m[0m [1m[35mfd[1m[0m [1m[35mfd[1m[0m [1m[35mfd[1m[0m [1m[35mfd[1m[0m [1m[35mfd[1m[0m [1m[35mfd[1m[0m
  0x0c087fff8640: [1m[31mfa[1m[0m [1m[31mfa[1m[0m [1m[35mfd[1m[0m [1m[35mfd[1m[0m [1m[35mfd[1m[0m [1m[35mfd[1m[0m [1m[35mfd[1m[0m [1m[35mfd[1m[0m [1m[31mfa[1m[0m [1m[31mfa[1m[0m [1m[35mfd[1m[0m [1m[35mfd[1m[0m [1m[35mfd[1m[0m [1m[35mfd[1m[0m [1m[35mfd[1m[0m [1m[35mfd[1m[0m
=>0x0c087fff8650: [1m[31mfa[1m[0m [1m[31mfa[1m[0m [1m[0m00[1m[0m [1m[0m00[1m[0m [1m[0m00[1m[0m [1m[0m00[1m[0m[[1m[0m01[1m[0m][1m[31mfa[1m[0m [1m[31mfa[1m[0m [1m[31mfa[1m[0m [1m[31mfa[1m[0m [1m[31mfa[1m[0m [1m[31mfa[1m[0m [1m[31mfa[1m[0m [1m[31mfa[1m[0m [1m[31mfa[1m[0m
  0x0c087fff8660: [1m[31mfa[1m[0m [1m[31mfa[1m[0m [1m[31mfa[1m[0m [1m[31mfa[1m[0m [1m[31mfa[1m[0m [1m[31mfa[1m[0m [1m[31mfa[1m[0m [1m[31mfa[1m[0m [1m[31mfa[1m[0m [1m[31mfa[1m[0m [1m[31mfa[1m[0m [1m[31mfa[1m[0m [1m[31mfa[1m[0m [1m[31mfa[1m[0m [1m[31mfa[1m[0m [1m[31mfa[1m[0m
  0x0c087fff8670: [1m[31mfa[1m[0m [1m[31mfa[1m[0m [1m[31mfa[1m[0m [1m[31mfa[1m[0m [1m[31mfa[1m[0m [1m[31mfa[1m[0m [1m[31mfa[1m[0m [1m[31mfa[1m[0m [1m[31mfa[1m[0m [1m[31mfa[1m[0m [1m[31mfa[1m[0m [1m[31mfa[1m[0m [1m[31mfa[1m[0m [1m[31mfa[1m[0m [1m[31mfa[1m[0m [1m[31mfa[1m[0m
  0x0c087fff8680: [1m[31mfa[1m[0m [1m[31mfa[1m[0m [1m[31mfa[1m[0m [1m[31mfa[1m[0m [1m[31mfa[1m[0m [1m[31mfa[1m[0m [1m[31mfa[1m[0m [1m[31mfa[1m[0m [1m[31mfa[1m[0m [1m[31mfa[1m[0m [1m[31mfa[1m[0m [1m[31mfa[1m[0m [1m[31mfa[1m[0m [1m[31mfa[1m[0m [1m[31mfa[1m[0m [1m[31mfa[1m[0m
  0x0c087fff8690: [1m[31mfa[1m[0m [1m[31mfa[1m[0m [1m[31mfa[1m[0m [1m[31mfa[1m[0m [1m[31mfa[1m[0m [1m[31mfa[1m[0m [1m[31mfa[1m[0m [1m[31mfa[1m[0m [1m[31mfa[1m[0m [1m[31mfa[1m[0m [1m[31mfa[1m[0m [1m[31mfa[1m[0m [1m[31mfa[1m[0m [1m[31mfa[1m[0m [1m[31mfa[1m[0m [1m[31mfa[1m[0m
  0x0c087fff86a0: [1m[31mfa[1m[0m [1m[31mfa[1m[0m [1m[31mfa[1m[0m [1m[31mfa[1m[0m [1m[31mfa[1m[0m [1m[31mfa[1m[0m [1m[31mfa[1m[0m [1m[31mfa[1m[0m [1m[31mfa[1m[0m [1m[31mfa[1m[0m [1m[31mfa[1m[0m [1m[31mfa[1m[0m [1m[31mfa[1m[0m [1m[31mfa[1m[0m [1m[31mfa[1m[0m [1m[31mfa[1m[0m
Shadow byte legend (one shadow byte represents 8 application bytes):
  Addressable:           [1m[0m00[1m[0m
  Partially addressable: [1m[0m01[1m[0m [1m[0m02[1m[0m [1m[0m03[1m[0m [1m[0m04[1m[0m [1m[0m05[1m[0m [1m[0m06[1m[0m [1m[0m07[1m[0m 
  Heap left redzone:       [1m[31mfa[1m[0m
  Freed heap region:       [1m[35mfd[1m[0m
  Stack left redzone:      [1m[31mf1[1m[0m
  Stack mid redzone:       [1m[31mf2[1m[0m
  Stack right redzone:     [1m[31mf3[1m[0m
  Stack after return:      [1m[35mf5[1m[0m
  Stack use after scope:   [1m[35mf8[1m[0m
  Global redzone:          [1m[31mf9[1m[0m
  Global init order:       [1m[36mf6[1m[0m
  Poisoned by user:        [1m[34mf7[1m[0m
  Container overflow:      [1m[34mfc[1m[0m
  Array cookie:            [1m[31mac[1m[0m
  Intra object redzone:    [1m[33mbb[1m[0m
  ASan internal:           [1m[33mfe[1m[0m
  Left alloca redzone:     [1m[34mca[1m[0m
  Right alloca redzone:    [1m[34mcb[1m[0m
==12==ABORTING
MS: 4 CopyPart-InsertRepeatedBytes-InsertRepeatedBytes-CopyPart-; base unit: 1b1e772c724507dc830d418ca955ecc6a5e74973
0x3f,0xb,0x3d,0x92,0x92,0x92,0x92,0x92,0xa,0x3d,0x0,0x0,0x0,0x0,0x92,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0xa,
?\013=\222\222\222\222\222\012=\000\000\000\000\222\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\012
artifact_prefix='./'; Test unit written to ./crash-2d134a2b90fba7e7526dd8034e61f9ee1c3bbfe5
Base64: Pws9kpKSkpIKPQAAAACSAAAAAAAAAAAAAAAAAAAAAAo=
stat::number_of_executed_units: 3421
stat::average_exec_per_sec:     0
stat::new_units_added:          10
stat::slowest_unit_time_sec:    0
stat::peak_rss_mb:              37
