/out/assimp_fuzzer -rss_limit_mb=2560 -timeout=25 assimp_fuzzer_poc/assimp--assimp_fuzzer--crash-53dcd537d62662775c4a8220ca337ac9-2023-07-23-01:00:36 # /tmp/assimp_fuzzer_corpus < /dev/null
INFO: Running with entropic power schedule (0xFF, 100).
INFO: Seed: 2273160027
INFO: Loaded 1 modules   (243469 inline 8-bit counters): 243469 [0x2083530, 0x20bec3d), 
INFO: Loaded 1 PC tables (243469 PCs): 243469 [0x20bec40,0x2475d10), 
/out/assimp_fuzzer: Running 1 inputs 1 time(s) each.
Running: assimp_fuzzer_poc/assimp--assimp_fuzzer--crash-53dcd537d62662775c4a8220ca337ac9-2023-07-23-01:00:36
Info,  T0: Load $$$___magic___$$$.
Info,  T0: File extension not known, trying signature-based detection
Info,  T0: Found a matching importer for this file format: LightWave Scene Importer.
Info,  T0: Import root directory is './'
Error, T0: Invalid LWS file detectedm abort import.
Info,  T0: Entering post processing pipeline
AddressSanitizer:DEADLYSIGNAL
=================================================================
[1m[31m==11==ERROR: AddressSanitizer: SEGV on unknown address 0x000000000460 (pc 0x000001983d13 bp 0x7ffea2f7ea10 sp 0x7ffea2f7e920 T0)
[1m[0m==11==The signal is caused by a READ memory access.
==11==Hint: address points to the zero page.
SCARINESS: 10 (null-deref)
    #0 0x1983d13 in Assimp::SplitLargeMeshesProcess_Triangle::UpdateNode(aiNode*, std::__1::vector<std::__1::pair<aiMesh*, unsigned int>, std::__1::allocator<std::__1::pair<aiMesh*, unsigned int> > > const&) /src/assimp/code/PostProcessing/SplitLargeMeshes.cpp:105:31
    #1 0x19805de in Assimp::SplitLargeMeshesProcess_Triangle::Execute(aiScene*) /src/assimp/code/PostProcessing/SplitLargeMeshes.cpp:89:5
    #2 0x18c8eed in Assimp::BaseProcess::ExecuteOnScene(Assimp::Importer*) /src/assimp/code/Common/BaseProcess.cpp:86:9
    #3 0x5cf0f4 in Assimp::Importer::ApplyPostProcessing(unsigned int) /src/assimp/code/Common/Importer.cpp:841:22
    #4 0x5c930c in Assimp::Importer::ReadFile(char const*, unsigned int) /src/assimp/code/Common/Importer.cpp:751:13
    #5 0x5c612f in Assimp::Importer::ReadFileFromMemory(void const*, unsigned long, unsigned int, char const*) /src/assimp/code/Common/Importer.cpp:507:9
    #6 0x577652 in LLVMFuzzerTestOneInput /src/assimp/fuzz/assimp_fuzzer.cc:54:34
    #7 0x448f43 in fuzzer::Fuzzer::ExecuteCallback(unsigned char const*, unsigned long) /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerLoop.cpp:611:15
    #8 0x4346a2 in fuzzer::RunOneTest(fuzzer::Fuzzer*, char const*, unsigned long) /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerDriver.cpp:324:6
    #9 0x439f4c in fuzzer::FuzzerDriver(int*, char***, int (*)(unsigned char const*, unsigned long)) /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerDriver.cpp:860:9
    #10 0x463482 in main /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerMain.cpp:20:10
    #11 0x7f7e8bb00082 in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x24082) (BuildId: 1878e6b475720c7c51969e69ab2d276fae6d1dee)
    #12 0x42a86d in _start (/out/assimp_fuzzer+0x42a86d)

DEDUP_TOKEN: Assimp::SplitLargeMeshesProcess_Triangle::UpdateNode(aiNode*, std::__1::vector<std::__1::pair<aiMesh*, unsigned int>, std::__1::allocator<std::__1::pair<aiMesh*, unsigned int> > > const&)--Assimp::SplitLargeMeshesProcess_Triangle::Execute(aiScene*)--Assimp::BaseProcess::ExecuteOnScene(Assimp::Importer*)
AddressSanitizer can not provide additional info.
SUMMARY: AddressSanitizer: SEGV /src/assimp/code/PostProcessing/SplitLargeMeshes.cpp:105:31 in Assimp::SplitLargeMeshesProcess_Triangle::UpdateNode(aiNode*, std::__1::vector<std::__1::pair<aiMesh*, unsigned int>, std::__1::allocator<std::__1::pair<aiMesh*, unsigned int> > > const&)
==11==ABORTING
