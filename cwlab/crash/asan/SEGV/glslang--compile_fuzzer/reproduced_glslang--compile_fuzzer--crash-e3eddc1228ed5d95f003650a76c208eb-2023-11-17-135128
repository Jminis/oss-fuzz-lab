/out/compile_fuzzer -rss_limit_mb=2560 -timeout=25 compile_fuzzer_poc/glslang--compile_fuzzer--crash-e3eddc1228ed5d95f003650a76c208eb-2023-11-17-13:51:28 # /tmp/compile_fuzzer_corpus < /dev/null
INFO: Running with entropic power schedule (0xFF, 100).
INFO: Seed: 4067522143
INFO: Loaded 1 modules   (53014 inline 8-bit counters): 53014 [0xe2c3b8, 0xe392ce), 
INFO: Loaded 1 PC tables (53014 PCs): 53014 [0xe392d0,0xf08430), 
/out/compile_fuzzer: Running 1 inputs 1 time(s) each.
Running: compile_fuzzer_poc/glslang--compile_fuzzer--crash-e3eddc1228ed5d95f003650a76c208eb-2023-11-17-13:51:28
Unable to parse built-ins
ERROR: 0:215: '' :  syntax error, unexpected TEXTURE2D, expecting COMMA or SEMICOLON
INTERNAL ERROR: Unable to parse built-ins

float radians(float);
vec2 radians(vec2);
vec3 radians(vec3);
vec4 radians(vec4);
float degrees(float);
vec2 degrees(vec2);
vec3 degrees(vec3);
vec4 degrees(vec4);
float sin(float);
vec2 sin(vec2);
vec3 sin(vec3);
vec4 sin(vec4);
float cos(float);
vec2 cos(vec2);
vec3 cos(vec3);
vec4 cos(vec4);
float tan(float);
vec2 tan(vec2);
vec3 tan(vec3);
vec4 tan(vec4);
float asin(float);
vec2 asin(vec2);
vec3 asin(vec3);
vec4 asin(vec4);
float acos(float);
vec2 acos(vec2);
vec3 acos(vec3);
vec4 acos(vec4);
float atan(float,float);
vec2 atan(vec2,vec2);
vec3 atan(vec3,vec3);
vec4 atan(vec4,vec4);
float atan(float);
vec2 atan(vec2);
vec3 atan(vec3);
vec4 atan(vec4);
float pow(float,float);
vec2 pow(vec2,vec2);
vec3 pow(vec3,vec3);
vec4 pow(vec4,vec4);
float exp(float);
vec2 exp(vec2);
vec3 exp(vec3);
vec4 exp(vec4);
float log(float);
vec2 log(vec2);
vec3 log(vec3);
vec4 log(vec4);
float exp2(float);
vec2 exp2(vec2);
vec3 exp2(vec3);
vec4 exp2(vec4);
float log2(float);
vec2 log2(vec2);
vec3 log2(vec3);
vec4 log2(vec4);
float sqrt(float);
vec2 sqrt(vec2);
vec3 sqrt(vec3);
vec4 sqrt(vec4);
float inversesqrt(float);
vec2 inversesqrt(vec2);
vec3 inversesqrt(vec3);
vec4 inversesqrt(vec4);
float abs(float);
vec2 abs(vec2);
vec3 abs(vec3);
vec4 abs(vec4);
float sign(float);
vec2 sign(vec2);
vec3 sign(vec3);
vec4 sign(vec4);
float floor(float);
vec2 floor(vec2);
vec3 floor(vec3);
vec4 floor(vec4);
float ceil(float);
vec2 ceil(vec2);
vec3 ceil(vec3);
vec4 ceil(vec4);
float fract(float);
vec2 fract(vec2);
vec3 fract(vec3);
vec4 fract(vec4);
float mod(float,float);
vec2 mod(vec2,vec2);
vec3 mod(vec3,vec3);
vec4 mod(vec4,vec4);
vec2 mod(vec2,float);
vec3 mod(vec3,float);
vec4 mod(vec4,float);
float min(float,float);
vec2 min(vec2,vec2);
vec3 min(vec3,vec3);
vec4 min(vec4,vec4);
vec2 min(vec2,float);
vec3 min(vec3,float);
vec4 min(vec4,float);
float max(float,float);
vec2 max(vec2,vec2);
vec3 max(vec3,vec3);
vec4 max(vec4,vec4);
vec2 max(vec2,float);
vec3 max(vec3,float);
vec4 max(vec4,float);
float clamp(float,float,float);
vec2 clamp(vec2,vec2,vec2);
vec3 clamp(vec3,vec3,vec3);
vec4 clamp(vec4,vec4,vec4);
vec2 clamp(vec2,float,float);
vec3 clamp(vec3,float,float);
vec4 clamp(vec4,float,float);
float mix(float,float,float);
vec2 mix(vec2,vec2,vec2);
vec3 mix(vec3,vec3,vec3);
vec4 mix(vec4,vec4,vec4);
vec2 mix(vec2,vec2,float);
vec3 mix(vec3,vec3,float);
vec4 mix(vec4,vec4,float);
float step(float,float);
vec2 step(vec2,vec2);
vec3 step(vec3,vec3);
vec4 step(vec4,vec4);
vec2 step(float,vec2);
vec3 step(float,vec3);
vec4 step(float,vec4);
float smoothstep(float,float,float);
vec2 smoothstep(vec2,vec2,vec2);
vec3 smoothstep(vec3,vec3,vec3);
vec4 smoothstep(vec4,vec4,vec4);
vec2 smoothstep(float,float,vec2);
vec3 smoothstep(float,float,vec3);
vec4 smoothstep(float,float,vec4);
float normalize(float);
vec2 normalize(vec2);
vec3 normalize(vec3);
vec4 normalize(vec4);
float faceforward(float,float,float);
vec2 faceforward(vec2,vec2,vec2);
vec3 faceforward(vec3,vec3,vec3);
vec4 faceforward(vec4,vec4,vec4);
float reflect(float,float);
vec2 reflect(vec2,vec2);
vec3 reflect(vec3,vec3);
vec4 reflect(vec4,vec4);
float refract(float,float,float);
vec2 refract(vec2,vec2,float);
vec3 refract(vec3,vec3,float);
vec4 refract(vec4,vec4,float);
float length(float);
float length(vec2);
float length(vec3);
float length(vec4);
float distance(float,float);
float distance(vec2,vec2);
float distance(vec3,vec3);
float distance(vec4,vec4);
float dot(float,float);
float dot(vec2,vec2);
float dot(vec3,vec3);
float dot(vec4,vec4);
vec3 cross(vec3,vec3);
bvec2 lessThan(vec2,vec2);
bvec3 lessThan(vec3,vec3);
bvec4 lessThan(vec4,vec4);
bvec2 lessThan(ivec2,ivec2);
bvec3 lessThan(ivec3,ivec3);
bvec4 lessThan(ivec4,ivec4);
bvec2 lessThanEqual(vec2,vec2);
bvec3 lessThanEqual(vec3,vec3);
bvec4 lessThanEqual(vec4,vec4);
bvec2 lessThanEqual(ivec2,ivec2);
bvec3 lessThanEqual(ivec3,ivec3);
bvec4 lessThanEqual(ivec4,ivec4);
bvec2 greaterThan(vec2,vec2);
bvec3 greaterThan(vec3,vec3);
bvec4 greaterThan(vec4,vec4);
bvec2 greaterThan(ivec2,ivec2);
bvec3 greaterThan(ivec3,ivec3);
bvec4 greaterThan(ivec4,ivec4);
bvec2 greaterThanEqual(vec2,vec2);
bvec3 greaterThanEqual(vec3,vec3);
bvec4 greaterThanEqual(vec4,vec4);
bvec2 greaterThanEqual(ivec2,ivec2);
bvec3 greaterThanEqual(ivec3,ivec3);
bvec4 greaterThanEqual(ivec4,ivec4);
bvec2 equal(bvec2,bvec2);
bvec3 equal(bvec3,bvec3);
bvec4 equal(bvec4,bvec4);
bvec2 equal(vec2,vec2);
bvec3 equal(vec3,vec3);
bvec4 equal(vec4,vec4);
bvec2 equal(ivec2,ivec2);
bvec3 equal(ivec3,ivec3);
bvec4 equal(ivec4,ivec4);
bvec2 notEqual(bvec2,bvec2);
bvec3 notEqual(bvec3,bvec3);
bvec4 notEqual(bvec4,bvec4);
bvec2 notEqual(vec2,vec2);
bvec3 notEqual(vec3,vec3);
bvec4 notEqual(vec4,vec4);
bvec2 notEqual(ivec2,ivec2);
bvec3 notEqual(ivec3,ivec3);
bvec4 notEqual(ivec4,ivec4);
bool any(bvec2);
bool any(bvec3);
bool any(bvec4);
bool all(bvec2);
bool all(bvec3);
bool all(bvec4);
bvec2 not(bvec2);
bvec3 not(bvec3);
bvec4 not(bvec4);
mat2 matrixCompMult(mat2 x, mat2 y);mat3 matrixCompMult(mat3 x, mat3 y);mat4 matrixCompMult(mat4 x, mat4 y);
vec4 texture2D(sampler2D, vec2);vec4 texture2DProj(sampler2D, vec3);vec4 texture2DProj(sampler2D, vec4);vec4 texture3D(sampler3D, vec3);vec4 texture3DProj(sampler3D, vec4);vec4 textureCube(samplerCube, vec3);
vec4 texture2D(samplerExternalOES, vec2 coord);vec4 texture2DProj(samplerExternalOES, vec3);vec4 texture2DProj(samplerExternalOES, vec4);
highp ivec2 textureSize(__samplerExternal2DY2YEXT, int lod);vec4 texture(__samplerExternal2DY2YEXT, vec2);vec4 texture(__samplerExternal2DY2YEXT, vec2, float bias);vec4 textureProj(__samplerExternal2DY2YEXT, vec3);vec4 textureProj(__samplerExternal2DY2YEXT, vec3, float bias);vec4 textureProj(__samplerExternal2DY2YEXT, vec4);vec4 textureProj(__samplerExternal2DY2YEXT, vec4, float bias);vec4 texelFetch(__samplerExternal2DY2YEXT sampler, ivec2, int lod);
vec4 texture2DGradEXT(sampler2D, vec2, vec2, vec2);vec4 texture2DProjGradEXT(sampler2D, vec3, vec2, vec2);vec4 texture2DProjGradEXT(sampler2D, vec4, vec2, vec2);vec4 textureCubeGradEXT(samplerCube, vec3, vec3, vec3);float shadow2DEXT(sampler2DShadow, vec3);float shadow2DProjEXT(sampler2DShadow, vec4);
void controlBarrier(int, int, int, int);
void memoryBarrier(int, int, int);
void debugPrintfEXT();
struct gl_DepthRangeParameters {highp float near;highp float far;highp float diff;};uniform gl_DepthRangeParameters gl_DepthRange;

Unable to parse built-ins
ERROR: 0:215: '' :  syntax error, unexpected TEXTURE2D, expecting COMMA or SEMICOLON
INTERNAL ERROR: Unable to parse built-ins
ERROR: 0:215: '' :  syntax error, unexpected TEXTURE2D, expecting COMMA or SEMICOLON
INTERNAL ERROR: Unable to parse built-ins

float radians(float);
vec2 radians(vec2);
vec3 radians(vec3);
vec4 radians(vec4);
float degrees(float);
vec2 degrees(vec2);
vec3 degrees(vec3);
vec4 degrees(vec4);
float sin(float);
vec2 sin(vec2);
vec3 sin(vec3);
vec4 sin(vec4);
float cos(float);
vec2 cos(vec2);
vec3 cos(vec3);
vec4 cos(vec4);
float tan(float);
vec2 tan(vec2);
vec3 tan(vec3);
vec4 tan(vec4);
float asin(float);
vec2 asin(vec2);
vec3 asin(vec3);
vec4 asin(vec4);
float acos(float);
vec2 acos(vec2);
vec3 acos(vec3);
vec4 acos(vec4);
float atan(float,float);
vec2 atan(vec2,vec2);
vec3 atan(vec3,vec3);
vec4 atan(vec4,vec4);
float atan(float);
vec2 atan(vec2);
vec3 atan(vec3);
vec4 atan(vec4);
float pow(float,float);
vec2 pow(vec2,vec2);
vec3 pow(vec3,vec3);
vec4 pow(vec4,vec4);
float exp(float);
vec2 exp(vec2);
vec3 exp(vec3);
vec4 exp(vec4);
float log(float);
vec2 log(vec2);
vec3 log(vec3);
vec4 log(vec4);
float exp2(float);
vec2 exp2(vec2);
vec3 exp2(vec3);
vec4 exp2(vec4);
float log2(float);
vec2 log2(vec2);
vec3 log2(vec3);
vec4 log2(vec4);
float sqrt(float);
vec2 sqrt(vec2);
vec3 sqrt(vec3);
vec4 sqrt(vec4);
float inversesqrt(float);
vec2 inversesqrt(vec2);
vec3 inversesqrt(vec3);
vec4 inversesqrt(vec4);
float abs(float);
vec2 abs(vec2);
vec3 abs(vec3);
vec4 abs(vec4);
float sign(float);
vec2 sign(vec2);
vec3 sign(vec3);
vec4 sign(vec4);
float floor(float);
vec2 floor(vec2);
vec3 floor(vec3);
vec4 floor(vec4);
float ceil(float);
vec2 ceil(vec2);
vec3 ceil(vec3);
vec4 ceil(vec4);
float fract(float);
vec2 fract(vec2);
vec3 fract(vec3);
vec4 fract(vec4);
float mod(float,float);
vec2 mod(vec2,vec2);
vec3 mod(vec3,vec3);
vec4 mod(vec4,vec4);
vec2 mod(vec2,float);
vec3 mod(vec3,float);
vec4 mod(vec4,float);
float min(float,float);
vec2 min(vec2,vec2);
vec3 min(vec3,vec3);
vec4 min(vec4,vec4);
vec2 min(vec2,float);
vec3 min(vec3,float);
vec4 min(vec4,float);
float max(float,float);
vec2 max(vec2,vec2);
vec3 max(vec3,vec3);
vec4 max(vec4,vec4);
vec2 max(vec2,float);
vec3 max(vec3,float);
vec4 max(vec4,float);
float clamp(float,float,float);
vec2 clamp(vec2,vec2,vec2);
vec3 clamp(vec3,vec3,vec3);
vec4 clamp(vec4,vec4,vec4);
vec2 clamp(vec2,float,float);
vec3 clamp(vec3,float,float);
vec4 clamp(vec4,float,float);
float mix(float,float,float);
vec2 mix(vec2,vec2,vec2);
vec3 mix(vec3,vec3,vec3);
vec4 mix(vec4,vec4,vec4);
vec2 mix(vec2,vec2,float);
vec3 mix(vec3,vec3,float);
vec4 mix(vec4,vec4,float);
float step(float,float);
vec2 step(vec2,vec2);
vec3 step(vec3,vec3);
vec4 step(vec4,vec4);
vec2 step(float,vec2);
vec3 step(float,vec3);
vec4 step(float,vec4);
float smoothstep(float,float,float);
vec2 smoothstep(vec2,vec2,vec2);
vec3 smoothstep(vec3,vec3,vec3);
vec4 smoothstep(vec4,vec4,vec4);
vec2 smoothstep(float,float,vec2);
vec3 smoothstep(float,float,vec3);
vec4 smoothstep(float,float,vec4);
float normalize(float);
vec2 normalize(vec2);
vec3 normalize(vec3);
vec4 normalize(vec4);
float faceforward(float,float,float);
vec2 faceforward(vec2,vec2,vec2);
vec3 faceforward(vec3,vec3,vec3);
vec4 faceforward(vec4,vec4,vec4);
float reflect(float,float);
vec2 reflect(vec2,vec2);
vec3 reflect(vec3,vec3);
vec4 reflect(vec4,vec4);
float refract(float,float,float);
vec2 refract(vec2,vec2,float);
vec3 refract(vec3,vec3,float);
vec4 refract(vec4,vec4,float);
float length(float);
float length(vec2);
float length(vec3);
float length(vec4);
float distance(float,float);
float distance(vec2,vec2);
float distance(vec3,vec3);
float distance(vec4,vec4);
float dot(float,float);
float dot(vec2,vec2);
float dot(vec3,vec3);
float dot(vec4,vec4);
vec3 cross(vec3,vec3);
bvec2 lessThan(vec2,vec2);
bvec3 lessThan(vec3,vec3);
bvec4 lessThan(vec4,vec4);
bvec2 lessThan(ivec2,ivec2);
bvec3 lessThan(ivec3,ivec3);
bvec4 lessThan(ivec4,ivec4);
bvec2 lessThanEqual(vec2,vec2);
bvec3 lessThanEqual(vec3,vec3);
bvec4 lessThanEqual(vec4,vec4);
bvec2 lessThanEqual(ivec2,ivec2);
bvec3 lessThanEqual(ivec3,ivec3);
bvec4 lessThanEqual(ivec4,ivec4);
bvec2 greaterThan(vec2,vec2);
bvec3 greaterThan(vec3,vec3);
bvec4 greaterThan(vec4,vec4);
bvec2 greaterThan(ivec2,ivec2);
bvec3 greaterThan(ivec3,ivec3);
bvec4 greaterThan(ivec4,ivec4);
bvec2 greaterThanEqual(vec2,vec2);
bvec3 greaterThanEqual(vec3,vec3);
bvec4 greaterThanEqual(vec4,vec4);
bvec2 greaterThanEqual(ivec2,ivec2);
bvec3 greaterThanEqual(ivec3,ivec3);
bvec4 greaterThanEqual(ivec4,ivec4);
bvec2 equal(bvec2,bvec2);
bvec3 equal(bvec3,bvec3);
bvec4 equal(bvec4,bvec4);
bvec2 equal(vec2,vec2);
bvec3 equal(vec3,vec3);
bvec4 equal(vec4,vec4);
bvec2 equal(ivec2,ivec2);
bvec3 equal(ivec3,ivec3);
bvec4 equal(ivec4,ivec4);
bvec2 notEqual(bvec2,bvec2);
bvec3 notEqual(bvec3,bvec3);
bvec4 notEqual(bvec4,bvec4);
bvec2 notEqual(vec2,vec2);
bvec3 notEqual(vec3,vec3);
bvec4 notEqual(vec4,vec4);
bvec2 notEqual(ivec2,ivec2);
bvec3 notEqual(ivec3,ivec3);
bvec4 notEqual(ivec4,ivec4);
bool any(bvec2);
bool any(bvec3);
bool any(bvec4);
bool all(bvec2);
bool all(bvec3);
bool all(bvec4);
bvec2 not(bvec2);
bvec3 not(bvec3);
bvec4 not(bvec4);
mat2 matrixCompMult(mat2 x, mat2 y);mat3 matrixCompMult(mat3 x, mat3 y);mat4 matrixCompMult(mat4 x, mat4 y);
vec4 texture2D(sampler2D, vec2);vec4 texture2DProj(sampler2D, vec3);vec4 texture2DProj(sampler2D, vec4);vec4 texture3D(sampler3D, vec3);vec4 texture3DProj(sampler3D, vec4);vec4 textureCube(samplerCube, vec3);
vec4 texture2D(samplerExternalOES, vec2 coord);vec4 texture2DProj(samplerExternalOES, vec3);vec4 texture2DProj(samplerExternalOES, vec4);
highp ivec2 textureSize(__samplerExternal2DY2YEXT, int lod);vec4 texture(__samplerExternal2DY2YEXT, vec2);vec4 texture(__samplerExternal2DY2YEXT, vec2, float bias);vec4 textureProj(__samplerExternal2DY2YEXT, vec3);vec4 textureProj(__samplerExternal2DY2YEXT, vec3, float bias);vec4 textureProj(__samplerExternal2DY2YEXT, vec4);vec4 textureProj(__samplerExternal2DY2YEXT, vec4, float bias);vec4 texelFetch(__samplerExternal2DY2YEXT sampler, ivec2, int lod);
vec4 texture2DGradEXT(sampler2D, vec2, vec2, vec2);vec4 texture2DProjGradEXT(sampler2D, vec3, vec2, vec2);vec4 texture2DProjGradEXT(sampler2D, vec4, vec2, vec2);vec4 textureCubeGradEXT(samplerCube, vec3, vec3, vec3);float shadow2DEXT(sampler2DShadow, vec3);float shadow2DProjEXT(sampler2DShadow, vec4);
void controlBarrier(int, int, int, int);
void memoryBarrier(int, int, int);
void debugPrintfEXT();
struct gl_DepthRangeParameters {highp float near;highp float far;highp float diff;};uniform gl_DepthRangeParameters gl_DepthRange;

Unable to parse built-ins
ERROR: 0:215: '' :  syntax error, unexpected TEXTURE2D, expecting COMMA or SEMICOLON
INTERNAL ERROR: Unable to parse built-ins
ERROR: 0:215: '' :  syntax error, unexpected TEXTURE2D, expecting COMMA or SEMICOLON
INTERNAL ERROR: Unable to parse built-ins
ERROR: 0:13: '' :  syntax error, unexpected TEXTURE2D, expecting COMMA or SEMICOLON
INTERNAL ERROR: Unable to parse built-ins

float dFdx(float);
vec2 dFdx(vec2);
vec3 dFdx(vec3);
vec4 dFdx(vec4);
float dFdy(float);
vec2 dFdy(vec2);
vec3 dFdy(vec3);
vec4 dFdy(vec4);
float fwidth(float);
vec2 fwidth(vec2);
vec3 fwidth(vec3);
vec4 fwidth(vec4);
vec4 texture2D(sampler2D, vec2, float);vec4 texture2DProj(sampler2D, vec3, float);vec4 texture2DProj(sampler2D, vec4, float);vec4 texture3D(sampler3D, vec3, float);vec4 texture3DProj(sampler3D, vec4, float);vec4 textureCube(samplerCube, vec3, float);
vec4 texture2DLodEXT(sampler2D, vec2, float);vec4 texture2DProjLodEXT(sampler2D, vec3, float);vec4 texture2DProjLodEXT(sampler2D, vec4, float);vec4 textureCubeLodEXT(samplerCube, vec3, float);
lowp uint stencilAttachmentReadEXT();lowp uint stencilAttachmentReadEXT(int);highp float depthAttachmentReadEXT();highp float depthAttachmentReadEXT(int);
vec4 colorAttachmentReadEXT(attachmentEXT);vec4 colorAttachmentReadEXT(attachmentEXT, int);ivec4 colorAttachmentReadEXT(iattachmentEXT);ivec4 colorAttachmentReadEXT(iattachmentEXT, int);uvec4 colorAttachmentReadEXT(uattachmentEXT);uvec4 colorAttachmentReadEXT(uattachmentEXT, int);
void beginInvocationInterlockARB(void);void endInvocationInterlockARB(void);bool helperInvocationEXT();
mediump vec4 gl_FragCoord;        bool gl_FrontFacing;mediump vec4 gl_FragColor;mediump vec2 gl_PointCoord;highp float gl_FragDepthEXT;

AddressSanitizer:DEADLYSIGNAL
=================================================================
[1m[31m==11==ERROR: AddressSanitizer: SEGV on unknown address 0x000000000000 (pc 0x0000006ee3aa bp 0x7fff537f3190 sp 0x7fff537f30e0 T0)
[1m[0m==11==The signal is caused by a READ memory access.
==11==Hint: address points to the zero page.
SCARINESS: 10 (null-deref)
    #0 0x6ee3aa in glslang::HlslParseContext::handleFunctionArgument(glslang::TFunction*, glslang::TIntermTyped*&, glslang::TIntermTyped*) /src/glslang/glslang/HLSL/hlslParseHelper.cpp:2479:37
    #1 0x7ef818 in glslang::HlslGrammar::acceptArguments(glslang::TFunction*, glslang::TIntermTyped*&) /src/glslang/glslang/HLSL/hlslGrammar.cpp:3615:22
    #2 0x7ef2f9 in glslang::HlslGrammar::acceptFunctionCall(glslang::TSourceLoc const&, std::__1::basic_string<char, std::__1::char_traits<char>, glslang::pool_allocator<char> >&, glslang::TIntermTyped*&, glslang::TIntermTyped*) /src/glslang/glslang/HLSL/hlslGrammar.cpp:3582:11
    #3 0x7ede11 in glslang::HlslGrammar::acceptPostfixExpression(glslang::TIntermTyped*&) /src/glslang/glslang/HLSL/hlslGrammar.cpp:3425:20
    #4 0x7ec901 in glslang::HlslGrammar::acceptUnaryExpression(glslang::TIntermTyped*&) /src/glslang/glslang/HLSL/hlslGrammar.cpp:3349:16
    #5 0x7ebf07 in glslang::HlslGrammar::acceptBinaryExpression(glslang::TIntermTyped*&, glslang::PrecedenceLevel) /src/glslang/glslang/HLSL/hlslGrammar.cpp:3253:16
    #6 0x7ebf36 in glslang::HlslGrammar::acceptBinaryExpression(glslang::TIntermTyped*&, glslang::PrecedenceLevel) /src/glslang/glslang/HLSL/hlslGrammar.cpp:3256:11
    #7 0x7ebf36 in glslang::HlslGrammar::acceptBinaryExpression(glslang::TIntermTyped*&, glslang::PrecedenceLevel) /src/glslang/glslang/HLSL/hlslGrammar.cpp:3256:11
    #8 0x7ebf36 in glslang::HlslGrammar::acceptBinaryExpression(glslang::TIntermTyped*&, glslang::PrecedenceLevel) /src/glslang/glslang/HLSL/hlslGrammar.cpp:3256:11
    #9 0x7ebf36 in glslang::HlslGrammar::acceptBinaryExpression(glslang::TIntermTyped*&, glslang::PrecedenceLevel) /src/glslang/glslang/HLSL/hlslGrammar.cpp:3256:11
    #10 0x7ebf36 in glslang::HlslGrammar::acceptBinaryExpression(glslang::TIntermTyped*&, glslang::PrecedenceLevel) /src/glslang/glslang/HLSL/hlslGrammar.cpp:3256:11
    #11 0x7ebf36 in glslang::HlslGrammar::acceptBinaryExpression(glslang::TIntermTyped*&, glslang::PrecedenceLevel) /src/glslang/glslang/HLSL/hlslGrammar.cpp:3256:11
    #12 0x7ebf36 in glslang::HlslGrammar::acceptBinaryExpression(glslang::TIntermTyped*&, glslang::PrecedenceLevel) /src/glslang/glslang/HLSL/hlslGrammar.cpp:3256:11
    #13 0x7ebf36 in glslang::HlslGrammar::acceptBinaryExpression(glslang::TIntermTyped*&, glslang::PrecedenceLevel) /src/glslang/glslang/HLSL/hlslGrammar.cpp:3256:11
    #14 0x7ebf36 in glslang::HlslGrammar::acceptBinaryExpression(glslang::TIntermTyped*&, glslang::PrecedenceLevel) /src/glslang/glslang/HLSL/hlslGrammar.cpp:3256:11
    #15 0x7ebf36 in glslang::HlslGrammar::acceptBinaryExpression(glslang::TIntermTyped*&, glslang::PrecedenceLevel) /src/glslang/glslang/HLSL/hlslGrammar.cpp:3256:11
    #16 0x7ebf36 in glslang::HlslGrammar::acceptBinaryExpression(glslang::TIntermTyped*&, glslang::PrecedenceLevel) /src/glslang/glslang/HLSL/hlslGrammar.cpp:3256:11
    #17 0x7d9984 in glslang::HlslGrammar::acceptConditionalExpression(glslang::TIntermTyped*&) /src/glslang/glslang/HLSL/hlslGrammar.cpp:3203:11
    #18 0x7d4d3d in glslang::HlslGrammar::acceptAssignmentExpression(glslang::TIntermTyped*&) /src/glslang/glslang/HLSL/hlslGrammar.cpp:3157:11
    #19 0x7cfeaf in glslang::HlslGrammar::acceptAttributes(glslang::TList<glslang::TAttributeArgs>&) /src/glslang/glslang/HLSL/hlslGrammar.cpp:3882:20
    #20 0x7cae04 in glslang::HlslGrammar::acceptDeclaration(TIntermNode*&) /src/glslang/glslang/HLSL/hlslGrammar.cpp:362:5
    #21 0x7c9c90 in acceptDeclarationList /src/glslang/glslang/HLSL/hlslGrammar.cpp:165:15
    #22 0x7c9c90 in glslang::HlslGrammar::acceptCompilationUnit() /src/glslang/glslang/HLSL/hlslGrammar.cpp:130:11
    #23 0x6a6ba6 in glslang::HlslParseContext::parseShaderStrings(glslang::TPpContext&, glslang::TInputScanner&, bool) /src/glslang/glslang/HLSL/hlslParseHelper.cpp:134:18
    #24 0x57dc93 in operator() /src/glslang/glslang/MachineIndependent/ShaderLang.cpp:1212:28
    #25 0x57dc93 in ProcessDeferred<(anonymous namespace)::DoFullParse> /src/glslang/glslang/MachineIndependent/ShaderLang.cpp:987:20
    #26 0x57dc93 in (anonymous namespace)::CompileDeferred(TCompiler*, char const* const*, int, int const*, char const* const*, char const*, EShOptimizationLevel, TBuiltInResource const*, int, EProfile, bool, int, bool, EShMessages, glslang::TIntermediate&, glslang::TShader::Includer&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, glslang::TEnvironment*, bool) /src/glslang/glslang/MachineIndependent/ShaderLang.cpp:1300:12
    #27 0x585f52 in glslang::TShader::parse(TBuiltInResource const*, int, EProfile, bool, bool, EShMessages, glslang::TShader::Includer&) /src/glslang/glslang/MachineIndependent/ShaderLang.cpp:1881:12
    #28 0x56d4d5 in parse /src/glslang/glslang/../glslang/Public/ShaderLang.h:666:16
    #29 0x56d4d5 in parse /src/glslang/glslang/../glslang/Public/ShaderLang.h:672:16
    #30 0x56d4d5 in LLVMFuzzerTestOneInput /src/compile_fuzzer.cc:28:10
    #31 0x43ed33 in fuzzer::Fuzzer::ExecuteCallback(unsigned char const*, unsigned long) /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerLoop.cpp:611:15
    #32 0x43f855 in fuzzer::Fuzzer::TryDetectingAMemoryLeak(unsigned char const*, unsigned long, bool) /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerLoop.cpp:687:3
    #33 0x42a4de in fuzzer::RunOneTest(fuzzer::Fuzzer*, char const*, unsigned long) /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerDriver.cpp:329:8
    #34 0x42fd3c in fuzzer::FuzzerDriver(int*, char***, int (*)(unsigned char const*, unsigned long)) /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerDriver.cpp:860:9
    #35 0x459272 in main /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerMain.cpp:20:10
    #36 0x7f1004f02082 in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x24082) (BuildId: e678fe54a5d2c2092f8e47eb0b33105e380f7340)
    #37 0x42065d in _start (/out/compile_fuzzer+0x42065d)

DEDUP_TOKEN: glslang::HlslParseContext::handleFunctionArgument(glslang::TFunction*, glslang::TIntermTyped*&, glslang::TIntermTyped*)--glslang::HlslGrammar::acceptArguments(glslang::TFunction*, glslang::TIntermTyped*&)--glslang::HlslGrammar::acceptFunctionCall(glslang::TSourceLoc const&, std::__1::basic_string<char, std::__1::char_traits<char>, glslang::pool_allocator<char> >&, glslang::TIntermTyped*&, glslang::TIntermTyped*)
AddressSanitizer can not provide additional info.
SUMMARY: AddressSanitizer: SEGV /src/glslang/glslang/HLSL/hlslParseHelper.cpp:2479:37 in glslang::HlslParseContext::handleFunctionArgument(glslang::TFunction*, glslang::TIntermTyped*&, glslang::TIntermTyped*)
==11==ABORTING
