/out/FuzzAsyncMessageSequence_debug -rss_limit_mb=2560 -timeout=25 FuzzAsyncMessageSequence_debug_poc/swift-protobuf--FuzzAsyncMessageSequence_debug--crash-68b329da9893e34099c7d8ad5cb9c940-2023-09-09-01:38:53 # /tmp/FuzzAsyncMessageSequence_debug_corpus -dict=FuzzAsyncMessageSequence_debug.dict < /dev/null
INFO: Running with entropic power schedule (0xFF, 100).
INFO: Seed: 2755363462
INFO: Loaded 1 modules   (157872 inline 8-bit counters): 157872 [0x557587cfcec0, 0x557587d23770), 
INFO: Loaded 1 PC tables (157872 PCs): 157872 [0x557587d23770,0x557587f8c270), 
/out/FuzzAsyncMessageSequence_debug: Running 1 inputs 1 time(s) each.
Running: FuzzAsyncMessageSequence_debug_poc/swift-protobuf--FuzzAsyncMessageSequence_debug--crash-68b329da9893e34099c7d8ad5cb9c940-2023-09-09-01:38:53
AddressSanitizer:DEADLYSIGNAL
=================================================================
[1m[31m==11==ERROR: AddressSanitizer: SEGV on unknown address (pc 0x557585544140 bp 0x000000000019 sp 0x7ffc5e9f1030 T0)
[1m[0m==11==The signal is caused by a READ memory access.
==11==Hint: this fault was caused by a dereference of a high value address (see register values below).  Disassemble the provided pc to learn which register was used.
SCARINESS: 20 (wild-addr-read)
    #0 0x557585544140 in dispatch_async_f crtstuff.c
    #1 0x55758557f68a in swift_task_create_common crtstuff.c
    #2 0x5575843cb855 in (extension in Swift):Swift.Task< where B == Swift.Never>.init(priority: Swift.Optional<Swift.TaskPriority>, operation: __owned @Sendable () async -> A) -> Swift.Task<A, Swift.Never> /src/swift-protobuf/FuzzTesting/<compiler-generated>
    #3 0x5575843c87e1 in FuzzAsyncMessageSequence.FuzzAsyncMessageSequence(Swift.UnsafeRawPointer, Swift.Int) -> Swift.Int32 /src/swift-protobuf/FuzzTesting/Sources/FuzzAsyncMessageSequence/main.swift:25:3
    #4 0x5575843c7980 in LLVMFuzzerTestOneInput /src/swift-protobuf/FuzzTesting/<compiler-generated>
    #5 0x55758429a573 in fuzzer::Fuzzer::ExecuteCallback(unsigned char const*, unsigned long) /home/build-user/llvm-project/compiler-rt/lib/fuzzer/FuzzerLoop.cpp:611:15
    #6 0x55758429ac05 in fuzzer::Fuzzer::TryDetectingAMemoryLeak(unsigned char const*, unsigned long, bool) /home/build-user/llvm-project/compiler-rt/lib/fuzzer/FuzzerLoop.cpp:687:3
    #7 0x55758428d85e in fuzzer::RunOneTest(fuzzer::Fuzzer*, char const*, unsigned long) /home/build-user/llvm-project/compiler-rt/lib/fuzzer/FuzzerDriver.cpp:329:8
    #8 0x557584292dca in fuzzer::FuzzerDriver(int*, char***, int (*)(unsigned char const*, unsigned long)) /home/build-user/llvm-project/compiler-rt/lib/fuzzer/FuzzerDriver.cpp:860:9
    #9 0x5575842ac402 in main /home/build-user/llvm-project/compiler-rt/lib/fuzzer/FuzzerMain.cpp:20:10
    #10 0x7f8789dab082 in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x24082)
    #11 0x55758428a12d in _start (/out/FuzzAsyncMessageSequence_debug+0x62812d)

DEDUP_TOKEN: dispatch_async_f--swift_task_create_common--(extension in Swift):Swift.Task< where B == Swift.Never>.init(priority: Swift.Optional<Swift.TaskPriority>, operation: __owned @Sendable () async -> A) -> Swift.Task<A, Swift.Never>
AddressSanitizer can not provide additional info.
SUMMARY: AddressSanitizer: SEGV crtstuff.c in dispatch_async_f
==11==ABORTING
